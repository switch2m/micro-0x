---
- name: Install python3
  hosts: localhost
  become: yes
  tasks:
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker
    - name: Instal docker compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{lookup('pipe', 'uname -s')}}-{{lookup('pipe', 'uname -m')}}
        dest: /usr/local/bin/docker-compose
        mode: +x
    - name: check docker version
      command: "{{ item }}"
      with_items:
        - docker version
        - docker-compose version
      register: output
    - debug: msg={{output}}
    - name: start docker
      systemd:
        name: docker
        state: started
      register: dockout
    - debug: msg={{dockout}}

- name: Install terraform
  hosts: localhost
  become: yes
  tasks:
    - name: Install unzip
      apt:
        name: unzip
        state: present
    - name: install terraform
      command: "{{ item }}"
      with_items:
      - "wget https://releases.hashicorp.com/terraform/1.3.3/terraform_1.3.3_linux_amd64.zip"
      - "unzip terraform_1.3.3_linux_amd64.zip"
      - "sudo mv terraform /usr/local/bin/"
    - name: check terraform version
      command: terraform version
      register: terout
    - debug: msg={{terout}}
#if we are running jenkins in docker container we should install the needed tool for deployment
- name: Install java and maeven
  hosts: localhost
  become: yes
  tasks:
    - name: Install wget
      apt:
        name: wget
        state: present
    - name: install java
      command: "{{ item }}"
      with_items:
      - "wget https://download.java.net/java/GA/jdk13.0.1/cec27d702aa74d5a8630c65ae61e4305/9/GPL/openjdk-13.0.1_linux-x64_bin.tar.gz"
      - "tar -xvf openjdk-13.0.1_linux-x64_bin.tar.gz"
      - "mv jdk-13.0.1 /opt/"
      - "JAVA_HOME='/opt/jdk-13.0.1'"
      - "PATH="$JAVA_HOME/bin:$PATH""
      - "export PATH"
    - name: check java version
      command: java version
      register: javaout
    - debug: msg={{javaout}}

    - name: install maeven
      command: "{{ item }}"
      with_items:
      - "wget https://mirrors.estointernet.in/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz"
      - "tar -xvf apache-maven-3.6.3-bin.tar.gz"
      - "mv apache-maven-3.6.3 /opt/"
      - "M2_HOME='/opt/apache-maven-3.6.3'"
      - "PATH="$M2_HOME/bin:$PATH""
      - "export PATH"
    - name: check meaven version
      command: maeven version
      register: mavenout
    - debug: msg={{maveout}}

    - name: Install kubectl
      command: "{{ item }}"
      with_items:
      - "curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl""
      - "curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256""
      - "echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check"
      - "install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl"
    - name: check kubectl version
      command: kubectl version --client
      register: kubout
    - debug: msg={{kubout}}

- name: add new user
  hosts: localhost
  become: yes
  tasks:
    - name: create a new user to run dokcer command
      user:
        name: new-user
        groups: docker
        append: yes
    - name: reconnect to the session
      meta: reset_connection


- name: Test docker pull
  hosts: localhost
  become: yes
  become_user: new-user
  tasks:
    - name: docker ps
      command:
        cmd: docker ps
    - name: docker images
      command:
        cmd: docker images
      register: dockimg
    - debug: msg={{dockimg}}

- name: install jenkins as docker container
  hosts: localhost
  become: yes
  tasks:
    - name: run jenkins in docker
      command:
        cmd: docker run -d -p 8080:8080 -p 50000:50000 -v jenkins_home:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker jenkins/jenkins:lts
      register: dockjen
    - debug: msg={{dockjen}}