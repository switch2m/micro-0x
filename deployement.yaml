---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: commande
  namespace: default
  annotations:
           prometheus.io/scrape: 'true'
           filter.by.port.name: 'true'
spec:
  selector:
    matchLabels:
      app: commande
  replicas: 1
  template:
    metadata:
      labels:
        app: commande
    spec:
      containers:
      - name: commande
        image: switch2mdock/micro-app:commandes
        ports:
        - containerPort: 9002
---
apiVersion: v1
kind: Service
metadata:
  name: commande
spec:
  type: LoadBalancer
  selector:
    app: commande
  ports:
  - protocol: TCP
    port: 80
    name: http
    targetPort: 9002

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: produits
  namespace: default
  annotations:
           prometheus.io/scrape: 'true'
           filter.by.port.name: 'true'
spec:
  selector:
    matchLabels:
      app: produits
  replicas: 1
  template:
    metadata:
      labels:
        app: produits
    spec:
      containers:
      - name: produits
        image: switch2mdock/micro-app:produits
        ports:
        - containerPort: 9001
---
apiVersion: v1
kind: Service
metadata:
  name: produits
spec:
  type: LoadBalancer
  selector:
    app: produits
  ports:
  - protocol: TCP
    port: 80
    name: http
    targetPort: 9001

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clientui
  namespace: default 
  annotations:
           prometheus.io/scrape: 'true'
           filter.by.port.name: 'true'
spec:
  selector:
    matchLabels:
      app: clientui
  replicas: 1
  template:
    metadata:
      labels:
        app: clientui
    spec:
      containers:
      - name: clientui
        image: switch2mdock/micro-app:client
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: clientui
spec:
  type: LoadBalancer
  selector:
    app: clientui
  ports:
  - protocol: TCP
    port: 80
    name: http
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paiement
  namespace: default
  annotations:
    prometheus.io/scrape: 'true'
    filter.by.port.name: 'true'
spec:
  selector:
    matchLabels:
      app: paiement
  replicas: 1
  template:
    metadata:
      labels:
        app: paiement
    spec:
      containers:
      - name: paiement
        image: switch2mdock/micro-app:paiement
        ports:
        - containerPort: 9003

---
apiVersion: v1
kind: Service
metadata:
  name: paiement
spec:
  type: LoadBalancer
  selector:
    app: paiement
  ports:
  - protocol: TCP
    port: 80
    name: http
    targetPort: 9003

